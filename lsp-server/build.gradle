plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    //lsp4j dependencies
    implementation 'org.eclipse.lsp4j:org.eclipse.lsp4j:0.14.0'
    implementation 'org.javatuples:javatuples:1.2'
    implementation 'com.github.arteam:simple-json-rpc-client:1.3'
    implementation 'com.github.arteam:simple-json-rpc-core:1.3'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.1.3'

    //dependencies for Unit-Tests
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
}

application {
    // Define the main class for the application.
    mainClass = 'launcher.StdioLauncher'
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes(
            'Main-Class': 'launcher.StdioLauncher'
        )
    }
    baseName 'launcher'

    doFirst {
	from {
	    configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.test {
    enabled = gradle.startParameter.taskNames.contains("test")
}
